# This is a sample Vroom input file. It should help you get started.
#
# Edit this file with your content. Then run `vroom vroom` to start
# the show!
#
# See `perldoc Vroom` for complete details.
#
---- config
# Basic config options.
title: Технологии асинхронного программирования
indent: 5
auto_size: 1
vim_opts: '-u NONE'
skip: 0

# The following options are for Gvim usage.
# vim: gvim
# gvimrc: |
#   set fuopt=maxhorz,maxvert
#   set guioptions=egmLtT
#   set guifont=Bitstream_Vera_Sans_Mono:h18
#   set guicursor=a:blinkon0-ver25-Cursor
#   colorscheme default

---- center
Технологии асинхронного программирования

Илья Чесноков

chesnokov.ilya@gmail.com

----
== Окружающий мир работает асинхронно

+* В многозадачном (параллельном) режиме
+* Объекты:
+  * взаимодействуют друг с другом
+  * выполняют задачи одновременно и независимо друг от друга

----
== Как приготовить обед?
* Поставить чайник
* Закинуть еду в микроволновку
* 3-5 минут почитать книгу / посидеть за компьютером / ...
* Услышать сигнал микроволновки
* Вернуться, достать еду, налить чай и поесть

----
== Задачи могуть быть выполнены

* Последовательно
* Параллельно
* Зависимо и независимо друг от друга
* В синхронном и асинхронном режиме

----
== Вычислительные задачи

* Посчитать что-нибудь
* Скачать что-нибудь
* Обработать данные с жесткого диска или внешнего устройства

----
== Ресурсы компьютера

* CPU
+...один или более
+* RAM
+* HDD
+* Network

----
== Как использовать их эффективно?

* Параллельность (concurrency/parallelism)
+* Процессы (forks)
+* Потоки (threads)
+* Асинхронная обработка

----
== Forks

* Самый простой способ дублирования процесса
* На заре Unix - самый быстрый
* Отдельная область памяти, данные и порядок выполнения не зависят от родителя
* Copy-on-write при создании
* Однопоточный форк использует отдельное ядро CPU (если доступно)
    - распределение осуществляется ОС

----
== Forks

* Ресурсоемкое создание
* Требует копирования больших объемов памяти
  - Возможно помещение данных в своп
* Затруднен обмен данными, нужно использовать IPC
  - (файлы, сигналы, сокеты, каналы, и т.д)

----
== Forks

## Hello, world
* Создать *заранее* несколько "рабочих" процессов
* Передавать им данные для обработки
* Например:
 - MCE
 - Apache mpm_prefork
 - Nginx (*)

---- center

Threads

----
== Threads

* Поток инструкций, который может быть исполнен как независимая единица
  программы ("процедура", выполняемая независимо от основной программы)
* Быстро создаются
* Быстро переключается контекст

----
== Threads
* Имеют общие с процессом данные
  - легко наладить коммуникацию
  - нужно использовать специальные механизмы для блокирования
* Каждый тред имеет:
  - стек
  - приоритет выполнения
  - собственные данные

----
== Threads

* Распределяются на все ядра CPU
  - планировщиком ОС, "вытесняющая многозадачность"
* Переключение происходит в соответствии с приоритетом треда

----
== Perl Threads

----
== Interpreter-based threads aka "Windows process emulation"

* Эмулируют процессы Unix на Windows
* Заменили модель "настоящих" тредов (5.005-threads)
* Для этого используются реальные треды

+== :-)

----
== Perl Threads

* Копируется состояние
* Изолируются модификации
* Разделяемые данные на самом деле таковыми не являются:
  - вместо этого они копируются
  - что приводит к сильному падению производительности в задачах
  с большим объемом коммуникаций
* forks - API для threads с настоящими процессами (а не эмуляцией)

----

== Примеры

---- .c,i4
---- include ../examples/threads/te.c

----
== Мало тредов, большая нагрузка

---- perl,i4
---- include ../examples/threads/threads.pl

---- perl,i4
---- include ../examples/threads/forks.pl

---- perl,i4
---- include ../examples/threads/coro.pl

== Много тредов, маленькая нагрузка

---- perl,i4
---- include ../examples/threads/threads-many.pl

---- perl,i4
---- include ../examples/threads/forks-many.pl

---- perl,i4
---- include ../examples/threads/coro-many.pl

----
== Типичные сценарии работы тредов

* "Телефонная будка* (mutex)
+* "В булочной" (starvation)
+* "Счет в банке" (nondeterminism)
+* "Отдых в горах" (deadlock)
+* "Обедающие философы" (starvation, deadlock)

----
== Решение проблем

* Мьютексы (Mutually Exclusive variables)
* Переменные-условия (conditional variables)
* Семафоры

----
----
----
----
----


----
== Вопросы?

----
== Спасибо!
